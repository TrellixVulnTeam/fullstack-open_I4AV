{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/luci/Projects/CourseProjects/fullstack-open/part2/part2-notes/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Note from \"./components/Note\";\nimport noteService from './services/notes';\n\nconst App = () => {\n  _s();\n\n  const [notes, setNotes] = useState([]);\n  const [newNote, setNewNote] = useState(\"\");\n  const [showAll, setShowAll] = useState(true);\n\n  const hook = () => {\n    console.log(\"effect\");\n    axios.get(\"http://localhost:3001/notes\").then(response => {\n      console.log(\"promise fulfilled\");\n      setNotes(response.data);\n    });\n  };\n\n  useEffect(hook, []);\n  console.log(\"render\", notes.length, \"notes\");\n\n  const handleNoteChange = event => {\n    setNewNote(event.target.value);\n  };\n\n  const addNote = event => {\n    event.preventDefault();\n    const noteObject = {\n      content: newNote,\n      date: new Date(),\n      important: Math.random() > 0.5\n    };\n    axios.post(`http://localhost:3001/notes`, noteObject).then(response => {\n      setNotes(notes.concat(noteObject));\n      setNewNote(\"\");\n    });\n  };\n\n  const notesToShow = showAll ? notes : notes.filter(note => note.important);\n\n  const toggleImportanceOf = id => {\n    const url = `http://localhost:3001/notes/${id}`;\n    const note = notes.find(n => n.id === id);\n    const changedNote = { ...note,\n      important: !note.important\n    };\n    axios.put(url, changedNote).then(response => {\n      setNotes(notes.map(note => note.id !== id ? note : response.data));\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Notes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowAll(!showAll),\n        children: [\"show \", showAll ? \"important\" : \"all\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: notesToShow.map((note, i) => /*#__PURE__*/_jsxDEV(Note, {\n        note: note,\n        toggleImportance: () => toggleImportanceOf(note.id)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: addNote,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: newNote,\n        onChange: handleNoteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"VU6NU9HHdERbn7aklUIuc8nn09Q=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/luci/Projects/CourseProjects/fullstack-open/part2/part2-notes/src/App.js"],"names":["React","useState","useEffect","axios","Note","noteService","App","notes","setNotes","newNote","setNewNote","showAll","setShowAll","hook","console","log","get","then","response","data","length","handleNoteChange","event","target","value","addNote","preventDefault","noteObject","content","date","Date","important","Math","random","post","concat","notesToShow","filter","note","toggleImportanceOf","id","url","find","n","changedNote","put","map","i"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Note from \"./components/Note\";\nimport noteService from './services/notes';\n\nconst App = () => {\n  const [notes, setNotes] = useState([]);\n  const [newNote, setNewNote] = useState(\"\");\n  const [showAll, setShowAll] = useState(true);\n\n  const hook = () => {\n    console.log(\"effect\");\n    axios.get(\"http://localhost:3001/notes\").then((response) => {\n      console.log(\"promise fulfilled\");\n      setNotes(response.data);\n    });\n  };\n  useEffect(hook, []);\n\n  console.log(\"render\", notes.length, \"notes\");\n\n  const handleNoteChange = (event) => {\n    setNewNote(event.target.value);\n  };\n\n  const addNote = (event) => {\n    event.preventDefault();\n    const noteObject = {\n      content: newNote,\n      date: new Date(),\n      important: Math.random() > 0.5,\n    };\n\n    axios.post(`http://localhost:3001/notes`, noteObject).then((response) => {\n      setNotes(notes.concat(noteObject));\n      setNewNote(\"\");\n    });\n  };\n\n  const notesToShow = showAll ? notes : notes.filter((note) => note.important);\n\n  const toggleImportanceOf = (id) => {\n    const url = `http://localhost:3001/notes/${id}`;\n    const note = notes.find((n) => n.id === id);\n    const changedNote = { ...note, important: !note.important };\n\n    axios.put(url, changedNote).then((response) => {\n      setNotes(notes.map((note) => (note.id !== id ? note : response.data)));\n    });\n  };\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? \"important\" : \"all\"}\n        </button>\n      </div>\n      <ul>\n        {notesToShow.map((note, i) => (\n          <Note\n            key={i}\n            note={note}\n            toggleImportance={() => toggleImportanceOf(note.id)}\n          />\n        ))}\n      </ul>\n      <form onSubmit={addNote}>\n        <input value={newNote} onChange={handleNoteChange} />\n        <button type=\"submit\">save</button>\n      </form>\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}