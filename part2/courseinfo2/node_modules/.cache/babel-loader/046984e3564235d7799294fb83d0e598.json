{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/luci/Projects/CourseProjects/fullstack-open/part2/part2-notes/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Note from \"./components/Note\";\n\nconst App = () => {\n  _s();\n\n  const [notes, setNotes] = useState([]);\n  const [newNote, setNewNote] = useState(\"\");\n  const [showAll, setShowAll] = useState(true);\n\n  const hook = () => {\n    console.log('effect');\n    axios.get('http://localhost:3001/notes').then(response => {\n      console.log('promise fulfilled');\n      setNotes(response.data);\n    });\n  };\n\n  useEffect(hook, []);\n  console.log('render', notes.length, 'notes');\n\n  const handleNoteChange = event => {\n    setNewNote(event.target.value);\n  };\n\n  const addNote = event => {\n    event.preventDefault();\n    const noteObject = {\n      content: newNote,\n      date: new Date(),\n      important: Math.random() > 0.5\n    };\n    axios.post(`http://localhost:3001/notes`, noteObject).then(response => {\n      setNotes(notes.concat(noteObject));\n      setNewNote(\"\");\n    });\n  };\n\n  const notesToShow = showAll ? notes : notes.filter(note => note.important);\n\n  const toggleImportanceOf = id => {};\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Notes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowAll(!showAll),\n        children: [\"show \", showAll ? \"important\" : \"all\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: notesToShow.map(note => /*#__PURE__*/_jsxDEV(Note, {\n        note: note\n      }, note.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: addNote,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: newNote,\n        onChange: handleNoteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"VU6NU9HHdERbn7aklUIuc8nn09Q=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/luci/Projects/CourseProjects/fullstack-open/part2/part2-notes/src/App.js"],"names":["React","useState","useEffect","axios","Note","App","notes","setNotes","newNote","setNewNote","showAll","setShowAll","hook","console","log","get","then","response","data","length","handleNoteChange","event","target","value","addNote","preventDefault","noteObject","content","date","Date","important","Math","random","post","concat","notesToShow","filter","note","toggleImportanceOf","id","map"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Note from \"./components/Note\";\n\nconst App = () => {\n  const [notes, setNotes] = useState([]);\n  const [newNote, setNewNote] = useState(\"\");\n  const [showAll, setShowAll] = useState(true);\n\n  const hook =() => {\n    console.log('effect')\n    axios\n    .get('http://localhost:3001/notes')\n    .then(response => {\n      console.log('promise fulfilled')\n      setNotes(response.data)\n    })\n  }\n  useEffect(hook, []);\n\n  console.log('render', notes.length, 'notes')\n\n  const handleNoteChange = (event) => {\n    setNewNote(event.target.value);\n  };\n\n  const addNote = (event) => {\n    event.preventDefault();\n    const noteObject = {\n      content: newNote,\n      date: new Date(),\n      important: Math.random() > 0.5,\n\n    };\n\n    axios\n    .post(`http://localhost:3001/notes`, noteObject)\n    .then(response => {\n      setNotes(notes.concat(noteObject));\n      setNewNote(\"\");\n    })\n  };\n\n  const notesToShow = showAll\n    ? notes\n    : notes.filter((note) => note.important);\n\n    const toggleImportanceOf = (id) => {}\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? \"important\" : \"all\"}\n        </button>\n      </div>\n      <ul>\n        {notesToShow.map((note) => (\n          <Note key={note.id} note={note} />\n        ))}\n      </ul>\n      <form onSubmit={addNote}>\n        <input value={newNote} onChange={handleNoteChange} />\n        <button type=\"submit\">save</button>\n      </form>\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}