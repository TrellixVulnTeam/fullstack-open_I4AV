{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/luci/Projects/CourseProjects/fullstack-open/part2/part2-notes/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Note from \"./components/Note\";\nimport noteService from \"./services/notes\";\n\nconst App = () => {\n  _s();\n\n  const [notes, setNotes] = useState([]);\n  const [newNote, setNewNote] = useState(\"\");\n  const [showAll, setShowAll] = useState(true);\n\n  const handleNoteChange = event => {\n    setNewNote(event.target.value);\n  };\n\n  const notesToShow = showAll ? notes : notes.filter(note => note.important);\n  useEffect(() => {\n    noteService.getAll().then(response => {\n      setNotes(response.data);\n    });\n  }, []);\n\n  const toggleImportanceOf = id => {\n    const note = notes.find(n => n.id === id);\n    const changedNote = { ...note,\n      important: !note.important\n    };\n    noteService.update(id, changedNote).then(response => {\n      setNotes(notes.map(note => note.id !== id ? note : response.data));\n    });\n  };\n\n  const addNote = event => {\n    event.preventDefault();\n    const noteObject = {\n      content: newNote,\n      date: new Date(),\n      important: Math.random() > 0.5\n    };\n    noteService.create(noteObject).then(response => {\n      setNotes(notes.concat(response.data));\n      setNewNote(\"\");\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Notes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowAll(!showAll),\n        children: [\"show \", showAll ? \"important\" : \"all\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: notesToShow.map((note, i) => /*#__PURE__*/_jsxDEV(Note, {\n        note: note,\n        toggleImportance: () => toggleImportanceOf(note.id)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: addNote,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: newNote,\n        onChange: handleNoteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"VU6NU9HHdERbn7aklUIuc8nn09Q=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/luci/Projects/CourseProjects/fullstack-open/part2/part2-notes/src/App.js"],"names":["React","useState","useEffect","Note","noteService","App","notes","setNotes","newNote","setNewNote","showAll","setShowAll","handleNoteChange","event","target","value","notesToShow","filter","note","important","getAll","then","response","data","toggleImportanceOf","id","find","n","changedNote","update","map","addNote","preventDefault","noteObject","content","date","Date","Math","random","create","concat","i"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,WAAP,MAAwB,kBAAxB;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,IAAD,CAAtC;;AAIA,QAAMW,gBAAgB,GAAIC,KAAD,IAAW;AAClCJ,IAAAA,UAAU,CAACI,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAV;AACD,GAFD;;AAKA,QAAMC,WAAW,GAAGN,OAAO,GAAGJ,KAAH,GAAWA,KAAK,CAACW,MAAN,CAAcC,IAAD,IAAUA,IAAI,CAACC,SAA5B,CAAtC;AAEAjB,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,WAAW,CACVgB,MADD,GACUC,IADV,CACgBC,QAAD,IAAc;AAC3Bf,MAAAA,QAAQ,CAACe,QAAQ,CAACC,IAAV,CAAR;AACD,KAHD;AAID,GALQ,EAKN,EALM,CAAT;;AAOA,QAAMC,kBAAkB,GAAIC,EAAD,IAAQ;AACjC,UAAMP,IAAI,GAAGZ,KAAK,CAACoB,IAAN,CAAYC,CAAD,IAAOA,CAAC,CAACF,EAAF,KAASA,EAA3B,CAAb;AACA,UAAMG,WAAW,GAAG,EAAE,GAAGV,IAAL;AAAWC,MAAAA,SAAS,EAAE,CAACD,IAAI,CAACC;AAA5B,KAApB;AAEAf,IAAAA,WAAW,CACVyB,MADD,CACQJ,EADR,EACYG,WADZ,EAECP,IAFD,CAEOC,QAAD,IAAc;AAClBf,MAAAA,QAAQ,CAACD,KAAK,CAACwB,GAAN,CAAWZ,IAAD,IAAWA,IAAI,CAACO,EAAL,KAAYA,EAAZ,GAAiBP,IAAjB,GAAwBI,QAAQ,CAACC,IAAtD,CAAD,CAAR;AACD,KAJD;AAKD,GATD;;AAWA,QAAMQ,OAAO,GAAIlB,KAAD,IAAW;AACzBA,IAAAA,KAAK,CAACmB,cAAN;AACA,UAAMC,UAAU,GAAG;AACjBC,MAAAA,OAAO,EAAE1B,OADQ;AAEjB2B,MAAAA,IAAI,EAAE,IAAIC,IAAJ,EAFW;AAGjBjB,MAAAA,SAAS,EAAEkB,IAAI,CAACC,MAAL,KAAgB;AAHV,KAAnB;AAMAlC,IAAAA,WAAW,CACVmC,MADD,CACQN,UADR,EAECZ,IAFD,CAEOC,QAAD,IAAc;AAClBf,MAAAA,QAAQ,CAACD,KAAK,CAACkC,MAAN,CAAalB,QAAQ,CAACC,IAAtB,CAAD,CAAR;AACAd,MAAAA,UAAU,CAAC,EAAD,CAAV;AACD,KALD;AAMD,GAdD;;AAgBA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,6BACE;AAAQ,QAAA,OAAO,EAAE,MAAME,UAAU,CAAC,CAACD,OAAF,CAAjC;AAAA,4BACQA,OAAO,GAAG,WAAH,GAAiB,KADhC;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF,eAOE;AAAA,gBACGM,WAAW,CAACc,GAAZ,CAAgB,CAACZ,IAAD,EAAOuB,CAAP,kBACf,QAAC,IAAD;AAEE,QAAA,IAAI,EAAEvB,IAFR;AAGE,QAAA,gBAAgB,EAAE,MAAMM,kBAAkB,CAACN,IAAI,CAACO,EAAN;AAH5C,SACOgB,CADP;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAPF,eAgBE;AAAM,MAAA,QAAQ,EAAEV,OAAhB;AAAA,8BACE;AAAO,QAAA,KAAK,EAAEvB,OAAd;AAAuB,QAAA,QAAQ,EAAEI;AAAjC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD,CAvED;;GAAMP,G;;KAAAA,G;AAyEN,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Note from \"./components/Note\";\nimport noteService from \"./services/notes\";\n\nconst App = () => {\n  const [notes, setNotes] = useState([]);\n  const [newNote, setNewNote] = useState(\"\");\n  const [showAll, setShowAll] = useState(true);\n\n\n\n  const handleNoteChange = (event) => {\n    setNewNote(event.target.value);\n  };\n\n\n  const notesToShow = showAll ? notes : notes.filter((note) => note.important);\n\n  useEffect(() => {\n    noteService\n    .getAll().then((response) => {\n      setNotes(response.data);\n    });\n  }, []);\n\n  const toggleImportanceOf = (id) => {\n    const note = notes.find((n) => n.id === id);\n    const changedNote = { ...note, important: !note.important };\n\n    noteService\n    .update(id, changedNote)\n    .then((response) => {\n      setNotes(notes.map((note) => (note.id !== id ? note : response.data)));\n    });\n  };\n\n  const addNote = (event) => {\n    event.preventDefault();\n    const noteObject = {\n      content: newNote,\n      date: new Date(),\n      important: Math.random() > 0.5,\n    };\n\n    noteService\n    .create(noteObject)\n    .then((response) => {\n      setNotes(notes.concat(response.data));\n      setNewNote(\"\");\n    });\n  };\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? \"important\" : \"all\"}\n        </button>\n      </div>\n      <ul>\n        {notesToShow.map((note, i) => (\n          <Note\n            key={i}\n            note={note}\n            toggleImportance={() => toggleImportanceOf(note.id)}\n          />\n        ))}\n      </ul>\n      <form onSubmit={addNote}>\n        <input value={newNote} onChange={handleNoteChange} />\n        <button type=\"submit\">save</button>\n      </form>\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}