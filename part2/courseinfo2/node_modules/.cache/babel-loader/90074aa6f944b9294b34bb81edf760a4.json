{"ast":null,"code":"import axios from \"axios\";\nconst baseUrl = \"http://localhost:3001/notes\";\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  const nonExisting = {\n    id: 10000,\n    content: \"This note is not saved to server\",\n    date: \"2019-05-30T17:30:31.098Z\",\n    important: true\n  };\n  return request.then(response => response.data.concat(nonExisting));\n};\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject);\n  return request.then(response => response.data);\n};\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\n  return request.then(response => response.data);\n};\n\nconst noteService = {\n  getAll,\n  create,\n  update\n};\nexport default note;","map":{"version":3,"sources":["/Users/luci/Projects/CourseProjects/fullstack-open/part2/part2-notes/src/services/notes.js"],"names":["axios","baseUrl","getAll","request","get","nonExisting","id","content","date","important","then","response","data","concat","create","newObject","post","update","put","noteService","note"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,MAAMC,OAAO,GAAG,6BAAhB;;AAEA,MAAMC,MAAM,GAAG,MAAM;AACnB,QAAMC,OAAO,GAAGH,KAAK,CAACI,GAAN,CAAUH,OAAV,CAAhB;AACA,QAAMI,WAAW,GAAG;AAClBC,IAAAA,EAAE,EAAE,KADc;AAElBC,IAAAA,OAAO,EAAE,kCAFS;AAGlBC,IAAAA,IAAI,EAAE,0BAHY;AAIlBC,IAAAA,SAAS,EAAE;AAJO,GAApB;AAMA,SAAON,OAAO,CAACO,IAAR,CAAcC,QAAD,IAAcA,QAAQ,CAACC,IAAT,CAAcC,MAAd,CAAqBR,WAArB,CAA3B,CAAP;AACD,CATD;;AAWA,MAAMS,MAAM,GAAIC,SAAD,IAAe;AAC5B,QAAMZ,OAAO,GAAGH,KAAK,CAACgB,IAAN,CAAWf,OAAX,EAAoBc,SAApB,CAAhB;AACA,SAAOZ,OAAO,CAACO,IAAR,CAAcC,QAAD,IAAcA,QAAQ,CAACC,IAApC,CAAP;AACD,CAHD;;AAKA,MAAMK,MAAM,GAAG,CAACX,EAAD,EAAKS,SAAL,KAAmB;AAChC,QAAMZ,OAAO,GAAGH,KAAK,CAACkB,GAAN,CAAW,GAAEjB,OAAQ,IAAGK,EAAG,EAA3B,EAA8BS,SAA9B,CAAhB;AACA,SAAOZ,OAAO,CAACO,IAAR,CAAcC,QAAD,IAAcA,QAAQ,CAACC,IAApC,CAAP;AACD,CAHD;;AAKA,MAAMO,WAAW,GAAG;AAClBjB,EAAAA,MADkB;AAElBY,EAAAA,MAFkB;AAGlBG,EAAAA;AAHkB,CAApB;AAKA,eAAeG,IAAf","sourcesContent":["import axios from \"axios\";\nconst baseUrl = \"http://localhost:3001/notes\";\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  const nonExisting = {\n    id: 10000,\n    content: \"This note is not saved to server\",\n    date: \"2019-05-30T17:30:31.098Z\",\n    important: true,\n  };\n  return request.then((response) => response.data.concat(nonExisting));\n};\n\nconst create = (newObject) => {\n  const request = axios.post(baseUrl, newObject);\n  return request.then((response) => response.data);\n};\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\n  return request.then((response) => response.data);\n};\n\nconst noteService = {\n  getAll,\n  create,\n  update,\n};\nexport default note\n"]},"metadata":{},"sourceType":"module"}